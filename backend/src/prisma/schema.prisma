
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// CRIANDO TABELA CHAMADA USUARIOS
model Usuario {
  id String @id @default(uuid())      //O UUID gerado é uma sequência de 32 caracteres hexadecimais divididos em 5 blocos, no seguinte formato: 5d3e8a36-7a57-4297-8f22-03ef123b3df7
  name String
  email String
  passaword String
  created_at DateTime? @default(now()) // A data de criação, preenchida na criação do registro
  updated_at DateTime? @default(now()) // A data de atualização, preenchida automaticamente na criação e a cada modificação

  @@map("usuarios")
}

// CRIANDO TABELA CATEGORIA
model Categoria{
id String @id @default(uuid())
name String
created_at DateTime? @default(now())
updated_at DateTime? @default(now())
@@map("categorias")
produts Produto[]
}

// CRIANDO TABELA DE PRODUTOS 
model Produto{
  id String @id @default(uuid())
  name String
  price String
  descrição String
  banner String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  category Categoria @relation(fields: [categoria_id], references: [id])
  @@map("produtos")

  categoria_id String
  items Item []
}

// TABELA ORDEM
model Ordem{
  id String @id @default(uuid())
  numero_mesa Int
  status Boolean @default(false)
  rascunho Boolean @default(true)
  name String?
   created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("ordems")
  ordems Item[]
}

model Item{
  id String @id @default(uuid())
  quantidade Int
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  
  ordem Ordem @relation(fields: [item_id], references: [id])
  produts Produto @relation(fields: [produto_id], references: [id])

  @@map("items")
  item_id String
  produto_id String
}
